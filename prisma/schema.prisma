generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Token {
  id          Int    @id @default(autoincrement())
  token       String @unique @db.VarChar(255)
  description String

  createdShops  Shop[]
  createdOffers Offer[]
  permissions   Permission?

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  ItemPriceLog ItemPriceLog[]

  @@map("token")
}

model Permission {
  id      Int   @id @default(autoincrement())
  token   Token @relation(fields: [tokenId], references: [id])
  tokenId Int   @unique

  readShops  Boolean @default(true)
  writeShops Boolean @default(false)

  readOffers  Boolean @default(true)
  writeOffers Boolean @default(false)

  readAuctions  Boolean @default(true)
  writeAuctions Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("permission")
}

model Shop {
  id Int @id @default(autoincrement())

  name    String @unique @db.VarChar(255)
  command String @unique @db.VarChar(255)

  createdBy   Token? @relation(fields: [createdById], references: [id], onDelete: SetNull)
  createdById Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("shop")
}

model Offer {
  id Int @id @default(autoincrement())

  shop      String  @db.VarChar(255)
  x         Int
  y         Int
  z         Int
  owner     String  @db.VarChar(32)
  item      String  @db.VarChar(255)
  display   String  @db.VarChar(512)
  buyPrice  Float
  sellPrice Float
  empty     Boolean @default(false)
  full      Boolean @default(false)

  createdBy   Token? @relation(fields: [createdById], references: [id], onDelete: SetNull)
  createdById Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([x, y, z])
  @@map("offer")
}

model ItemPriceLog {
  id Int @id @default(autoincrement())

  item String      @db.VarChar(255)
  type ItemLogType

  price  Float
  amount Int   @default(1)

  createdBy   Token? @relation(fields: [createdById], references: [id], onDelete: SetNull)
  createdById Int?

  createdAt DateTime @default(now())

  @@map("itempricelog")
}

enum ItemLogType {
  BUY_OFFER
  SELL_OFFER
  AUCTION
}
